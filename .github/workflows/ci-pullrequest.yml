# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Eval-PR

on:
  pull_request_target:
    types: [labeled]
    
env:
  BUILD_TYPE: Release
  
jobs:

  fanout:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
          
      - name: Generate matrix with all modules of the repo
        id: set-matrix
        run: |
          echo "matrix=$(ls -l | grep '^d' | awk -F ' ' '{print $9}' | grep -Po 'Si.*' | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> "$GITHUB_OUTPUT"
          
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build:
    needs: fanout
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'Run Checks')
    strategy:
      fail-fast: false
      matrix:
        path: ${{ fromJson(needs.fanout.outputs.matrix) }}
    steps:
    - name: Prepare environment sha
      shell: bash
      run: echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
      
    - name: Prepare environment pwd
      shell: bash
      run: echo "START_DIR=`pwd`" >> $GITHUB_ENV
      
    - uses: actions/checkout@v4

    - name: References
      uses: actions/checkout@v4
      with:
        repository: ${{ secrets.PRIV_R }}
        token: ${{ secrets.FGAT_PRIV_R }}
        path: references

    - name: Copy References
      run: |
        cp -r references/. include
    
    - name: Download QList
      uses: robinraju/release-downloader@v1.9
      with:
        repository: "dodad-2/QList"
        latest: true
        fileName: "QList.dll"
        tarBall: false
        zipBall: false

    - name: Move QList
      run: |
        mv QList.dll include/
        
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: |
        cd ${{ matrix.path }}
        dotnet restore
        
    - name: Build
      run: |
        cd ${{ matrix.path }}
        dotnet build --no-restore -c ${{env.BUILD_TYPE}}
        
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.path }}-build-${{ env.GITHUB_SHA_SHORT }}
        path: ${{ matrix.path }}/bin/${{env.BUILD_TYPE}}/**/*.dll
        
    - uses: actions/upload-artifact@v4
      with:
        name: dedicated-server-${{ matrix.path }}-build-${{ env.GITHUB_SHA_SHORT }}
        path: ${{ matrix.path }}/bin/${{env.BUILD_TYPE}}/netstandard2.1/*.dll
        
    - uses: actions/upload-artifact@v4
      with:
        name: listen-server-${{ matrix.path }}-build-${{ env.GITHUB_SHA_SHORT }}
        path: ${{ matrix.path }}/bin/${{env.BUILD_TYPE}}/net6.0/${{ matrix.path }}.dll
